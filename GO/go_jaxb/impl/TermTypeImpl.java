//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.01.30 at 01:01:22 PST 
//


package GO.go_jaxb.impl;

public class TermTypeImpl implements GO.go_jaxb.TermType, com.sun.xml.bind.JAXBObject, GO.go_jaxb.impl.runtime.UnmarshallableObject, GO.go_jaxb.impl.runtime.XMLSerializable, GO.go_jaxb.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _History = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Definition;
    protected com.sun.xml.bind.util.ListImpl _Synonym = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _NAssociations;
    protected java.lang.String _Accession;
    protected com.sun.xml.bind.util.ListImpl _PartOfOrIsA = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _About;
    protected java.lang.String _Focus;
    protected com.sun.xml.bind.util.ListImpl _Association = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _Dbxref = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (GO.go_jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (GO.go_jaxb.TermType.class);
    }

    public java.util.List getHistory() {
        return _History;
    }

    public java.lang.String getDefinition() {
        return _Definition;
    }

    public void setDefinition(java.lang.String value) {
        _Definition = value;
    }

    public java.util.List getSynonym() {
        return _Synonym;
    }

    public java.lang.String getNAssociations() {
        return _NAssociations;
    }

    public void setNAssociations(java.lang.String value) {
        _NAssociations = value;
    }

    public java.lang.String getAccession() {
        return _Accession;
    }

    public void setAccession(java.lang.String value) {
        _Accession = value;
    }

    public java.util.List getPartOfOrIsA() {
        return _PartOfOrIsA;
    }

    public java.lang.String getAbout() {
        return _About;
    }

    public void setAbout(java.lang.String value) {
        _About = value;
    }

    public java.lang.String getFocus() {
        return _Focus;
    }

    public void setFocus(java.lang.String value) {
        _Focus = value;
    }

    public java.util.List getAssociation() {
        return _Association;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.util.List getDbxref() {
        return _Dbxref;
    }

    public GO.go_jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(GO.go_jaxb.impl.runtime.UnmarshallingContext context) {
        return new GO.go_jaxb.impl.TermTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(GO.go_jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _History.size();
        int idx3 = 0;
        final int len3 = _Synonym.size();
        int idx6 = 0;
        final int len6 = _PartOfOrIsA.size();
        int idx9 = 0;
        final int len9 = _Association.size();
        int idx11 = 0;
        final int len11 = _Dbxref.size();
        context.startElement("", "accession");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Accession), "Accession");
        } catch (java.lang.Exception e) {
            GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "name");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx3 != len3) {
            context.startElement("", "synonym");
            int idx_4 = idx3;
            try {
                idx_4 += 1;
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_5 = idx3;
            try {
                idx_5 += 1;
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Synonym.get(idx3 ++)), "Synonym");
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Definition!= null) {
            context.startElement("", "definition");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Definition), "Definition");
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx6 != len6) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _PartOfOrIsA.get(idx6 ++)), "PartOfOrIsA");
        }
        while (idx11 != len11) {
            if (_Dbxref.get(idx11) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Dbxref.get(idx11 ++)), "Dbxref");
            } else {
                context.startElement("", "dbxref");
                int idx_8 = idx11;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Dbxref.get(idx_8 ++)), "Dbxref");
                context.endNamespaceDecls();
                int idx_9 = idx11;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Dbxref.get(idx_9 ++)), "Dbxref");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Dbxref.get(idx11 ++)), "Dbxref");
                context.endElement();
            }
        }
        while (idx9 != len9) {
            if (_Association.get(idx9) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Association.get(idx9 ++)), "Association");
            } else {
                context.startElement("", "association");
                int idx_10 = idx9;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Association.get(idx_10 ++)), "Association");
                context.endNamespaceDecls();
                int idx_11 = idx9;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Association.get(idx_11 ++)), "Association");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Association.get(idx9 ++)), "Association");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_History.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _History.get(idx1 ++)), "History");
            } else {
                context.startElement("", "history");
                int idx_12 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _History.get(idx_12 ++)), "History");
                context.endNamespaceDecls();
                int idx_13 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _History.get(idx_13 ++)), "History");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _History.get(idx1 ++)), "History");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(GO.go_jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _History.size();
        int idx3 = 0;
        final int len3 = _Synonym.size();
        int idx6 = 0;
        final int len6 = _PartOfOrIsA.size();
        int idx9 = 0;
        final int len9 = _Association.size();
        int idx11 = 0;
        final int len11 = _Dbxref.size();
        if (_NAssociations!= null) {
            context.startAttribute("", "n_associations");
            try {
                context.text(((java.lang.String) _NAssociations), "NAssociations");
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "about");
        try {
            context.text(((java.lang.String) _About), "About");
        } catch (java.lang.Exception e) {
            GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Focus!= null) {
            context.startAttribute("", "focus");
            try {
                context.text(((java.lang.String) _Focus), "Focus");
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx6 != len6) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PartOfOrIsA.get(idx6 ++)), "PartOfOrIsA");
        }
        while (idx11 != len11) {
            if (_Dbxref.get(idx11) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Dbxref.get(idx11 ++)), "Dbxref");
            } else {
                idx11 += 1;
            }
        }
        while (idx9 != len9) {
            if (_Association.get(idx9) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Association.get(idx9 ++)), "Association");
            } else {
                idx9 += 1;
            }
        }
        while (idx1 != len1) {
            if (_History.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _History.get(idx1 ++)), "History");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(GO.go_jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _History.size();
        int idx3 = 0;
        final int len3 = _Synonym.size();
        int idx6 = 0;
        final int len6 = _PartOfOrIsA.size();
        int idx9 = 0;
        final int len9 = _Association.size();
        int idx11 = 0;
        final int len11 = _Dbxref.size();
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx6 != len6) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PartOfOrIsA.get(idx6 ++)), "PartOfOrIsA");
        }
        while (idx11 != len11) {
            if (_Dbxref.get(idx11) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Dbxref.get(idx11 ++)), "Dbxref");
            } else {
                idx11 += 1;
            }
        }
        while (idx9 != len9) {
            if (_Association.get(idx9) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Association.get(idx9 ++)), "Association");
            } else {
                idx9 += 1;
            }
        }
        while (idx1 != len1) {
            if (_History.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _History.get(idx1 ++)), "History");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (GO.go_jaxb.TermType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0017J\u00d8\u00b1ppsq\u0000~\u0000\u0000\u0016+Z\u009bppsq\u0000~\u0000\u0000\u0015"
+"-\u00c2\u0090ppsq\u0000~\u0000\u0000\u0013\"\"\u00e6ppsq\u0000~\u0000\u0000\u000f2#Tppsq\u0000~\u0000\u0000\u000b\u00c2p\u0089ppsq\u0000~\u0000\u0000\t\u008aF~ppsq\u0000~\u0000\u0000\u0007"
+"\u00f2R\u00abppsq\u0000~\u0000\u0000\u0006a\u00f5_ppsq\u0000~\u0000\u0000\u0004\u0081:\u0082ppsr\u0000\'com.sun.msv.grammar.trex.El"
+"ementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/N"
+"ameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aign"
+"oreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u001a\u0018\u00c3pp\u0000sq\u0000~"
+"\u0000\u0000\u0003\u001a\u0018\u00b8ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLo"
+"rg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/su"
+"n/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00e1\u00ee\u00b8ppsr\u0000#com.sun.msv.datatype.x"
+"sd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.data"
+"type.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatyp"
+"e.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XS"
+"DatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L"
+"\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whi"
+"teSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006str"
+"ingsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fs"
+"r\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u00028)\u00fbppsr\u0000 c"
+"om.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tname"
+"Classq\u0000~\u0000\u0010xq\u0000~\u0000\u0003\u00028)\u00f0sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psq\u0000~\u0000\u0014\u0000nCuppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u00001q\u0000~\u0000\u001fs"
+"r\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNam"
+"eq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-insta"
+"ncesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000,\u0001psq\u0000~\u00005t\u0000\taccessiont\u0000\u0000sq\u0000~\u0000\u000f\u0001g!\u00bapp\u0000sq"
+"\u0000~\u0000\u0000\u0001g!\u00afppq\u0000~\u0000\u0017sq\u0000~\u0000(\u0000\u00852\u00f2ppsq\u0000~\u0000*\u0000\u00852\u00e7q\u0000~\u0000-pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q"
+"\u0000~\u00009q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0004nameq\u0000~\u0000?sq\u0000~\u0000(\u0001\u00e0\u00ba\u00d8ppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00e0\u00ba\u00cdq\u0000~\u0000-psq\u0000~\u0000\u000f\u0001\u00e0\u00ba\u00caq\u0000~\u0000-p\u0000sq\u0000~\u0000\u0000\u0001"
+"\u00e0\u00ba\u00bfppq\u0000~\u0000\u0017sq\u0000~\u0000(\u0000\u00fe\u00cc\u0002ppsq\u0000~\u0000*\u0000\u00fe\u00cb\u00f7q\u0000~\u0000-pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q\u0000~\u00009q"
+"\u0000~\u0000;sq\u0000~\u00005t\u0000\u0007synonymq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000(\u0001\u0090]Gppsq\u0000~\u0000\u000f\u0001\u0090]<q\u0000~\u0000-p\u0000s"
+"q\u0000~\u0000\u0000\u0001\u0090]1ppq\u0000~\u0000\u0017sq\u0000~\u0000(\u0000\u00aentppsq\u0000~\u0000*\u0000\u00aeniq\u0000~\u0000-pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008"
+"q\u0000~\u00009q\u0000~\u0000;sq\u0000~\u00005t\u0000\ndefinitionq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000(\u0001\u0097\u00f3\u00ceppsq\u0000~\u0000H\u0001\u0097\u00f3"
+"\u00c3q\u0000~\u0000-psq\u0000~\u0000(\u0001\u0097\u00f3\u00c0q\u0000~\u0000-psq\u0000~\u0000\u000f\u0000\u00cb\u00f9\u00dfq\u0000~\u0000-p\u0000sq\u0000~\u0000(\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000H\u0000\u00cb"
+"\u00f9\u00c9q\u0000~\u0000-psq\u0000~\u0000*\u0000\u00cb\u00f9\u00c6q\u0000~\u0000-psr\u00002com.sun.msv.grammar.Expression$A"
+"nyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000<psr\u0000 com.sun.msv"
+".grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0011GO.go_ja"
+"xb.PartOft\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000"
+"\u000f\u0000\u00cb\u00f9\u00dfq\u0000~\u0000-p\u0000sq\u0000~\u0000(\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000H\u0000\u00cb\u00f9\u00c9q\u0000~\u0000-psq\u0000~\u0000*\u0000\u00cb\u00f9\u00c6q\u0000~\u0000-pq\u0000~\u0000"
+"bq\u0000~\u0000dq\u0000~\u0000;sq\u0000~\u00005t\u0000\u000eGO.go_jaxb.IsAq\u0000~\u0000gq\u0000~\u0000;sq\u0000~\u0000(\u00028*\u0006ppsq\u0000~"
+"\u0000H\u00028)\u00fbq\u0000~\u0000-psq\u0000~\u0000(\u00028)\u00f8q\u0000~\u0000-psq\u0000~\u0000\u000f\u0000\u00cb\u00f9\u00dfq\u0000~\u0000-p\u0000sq\u0000~\u0000(\u0000\u00cb\u00f9\u00d4ppsq\u0000"
+"~\u0000H\u0000\u00cb\u00f9\u00c9q\u0000~\u0000-psq\u0000~\u0000*\u0000\u00cb\u00f9\u00c6q\u0000~\u0000-pq\u0000~\u0000bq\u0000~\u0000dq\u0000~\u0000;sq\u0000~\u00005t\u0000\u0011GO.go_j"
+"axb.Dbxrefq\u0000~\u0000gsq\u0000~\u0000\u000f\u0001l0\u0017q\u0000~\u0000-p\u0000sq\u0000~\u0000\u0000\u0001l0\fppsq\u0000~\u0000\u000f\u0000\u00cb\u00f9\u00dfpp\u0000sq\u0000"
+"~\u0000(\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000H\u0000\u00cb\u00f9\u00c9q\u0000~\u0000-psq\u0000~\u0000*\u0000\u00cb\u00f9\u00c6q\u0000~\u0000-pq\u0000~\u0000bq\u0000~\u0000dq\u0000~\u0000;sq\u0000~"
+"\u00005t\u0000\u0015GO.go_jaxb.DbxrefTypeq\u0000~\u0000gsq\u0000~\u0000(\u0000\u00a06(ppsq\u0000~\u0000*\u0000\u00a06\u001dq\u0000~\u0000-pq"
+"\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q\u0000~\u00009q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0006dbxrefq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000(\u0003o\u00b2\u00c6"
+"ppsq\u0000~\u0000H\u0003o\u00b2\u00bbq\u0000~\u0000-psq\u0000~\u0000(\u0003o\u00b2\u00b8q\u0000~\u0000-psq\u0000~\u0000\u000f\u0000\u00cb\u00f9\u00dfq\u0000~\u0000-p\u0000sq\u0000~\u0000(\u0000\u00cb\u00f9"
+"\u00d4ppsq\u0000~\u0000H\u0000\u00cb\u00f9\u00c9q\u0000~\u0000-psq\u0000~\u0000*\u0000\u00cb\u00f9\u00c6q\u0000~\u0000-pq\u0000~\u0000bq\u0000~\u0000dq\u0000~\u0000;sq\u0000~\u00005t\u0000\u0016G"
+"O.go_jaxb.Associationq\u0000~\u0000gsq\u0000~\u0000\u000f\u0002\u00a3\u00b8\u00d7q\u0000~\u0000-p\u0000sq\u0000~\u0000\u0000\u0002\u00a3\u00b8\u00ccppsq\u0000~\u0000"
+"\u000f\u0000\u00cb\u00f9\u00dfpp\u0000sq\u0000~\u0000(\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000H\u0000\u00cb\u00f9\u00c9q\u0000~\u0000-psq\u0000~\u0000*\u0000\u00cb\u00f9\u00c6q\u0000~\u0000-pq\u0000~\u0000bq\u0000~"
+"\u0000dq\u0000~\u0000;sq\u0000~\u00005t\u0000\u001aGO.go_jaxb.AssociationTypeq\u0000~\u0000gsq\u0000~\u0000(\u0001\u00d7\u00be\u00e8pps"
+"q\u0000~\u0000*\u0001\u00d7\u00be\u00ddq\u0000~\u0000-pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q\u0000~\u00009q\u0000~\u0000;sq\u0000~\u00005t\u0000\u000bassociatio"
+"nq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000(\u0003\u00ef\u00ff\u008dppsq\u0000~\u0000H\u0003\u00ef\u00ff\u0082q\u0000~\u0000-psq\u0000~\u0000(\u0003\u00ef\u00ff\u007fq\u0000~\u0000-psq\u0000~\u0000"
+"\u000f\u0000\u00cb\u00f9\u00dfq\u0000~\u0000-p\u0000sq\u0000~\u0000(\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000H\u0000\u00cb\u00f9\u00c9q\u0000~\u0000-psq\u0000~\u0000*\u0000\u00cb\u00f9\u00c6q\u0000~\u0000-pq\u0000~\u0000"
+"bq\u0000~\u0000dq\u0000~\u0000;sq\u0000~\u00005t\u0000\u0012GO.go_jaxb.Historyq\u0000~\u0000gsq\u0000~\u0000\u000f\u0003$\u0005\u009eq\u0000~\u0000-p\u0000"
+"sq\u0000~\u0000\u0000\u0003$\u0005\u0093ppsq\u0000~\u0000\u000f\u0000\u00cb\u00f9\u00dfpp\u0000sq\u0000~\u0000(\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000H\u0000\u00cb\u00f9\u00c9q\u0000~\u0000-psq\u0000~\u0000*\u0000"
+"\u00cb\u00f9\u00c6q\u0000~\u0000-pq\u0000~\u0000bq\u0000~\u0000dq\u0000~\u0000;sq\u0000~\u00005t\u0000\u0016GO.go_jaxb.HistoryTypeq\u0000~\u0000g"
+"sq\u0000~\u0000(\u0002X\u000b\u00afppsq\u0000~\u0000*\u0002X\u000b\u00a4q\u0000~\u0000-pq\u0000~\u0000.sq\u0000~\u00005q\u0000~\u00008q\u0000~\u00009q\u0000~\u0000;sq\u0000~\u00005"
+"t\u0000\u0007historyq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000(\u0002\u000b\u009f\u00a5ppsq\u0000~\u0000*\u0002\u000b\u009f\u009aq\u0000~\u0000-pq\u0000~\u0000\u0017sq\u0000~\u00005t"
+"\u0000\u000en_associationsq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000*\u0000\u00fd\u0098\u0006ppq\u0000~\u0000\u0017sq\u0000~\u00005t\u0000\u0005aboutq\u0000~"
+"\u0000?sq\u0000~\u0000(\u0001\u001f~\u0011ppsq\u0000~\u0000*\u0001\u001f~\u0006q\u0000~\u0000-psq\u0000~\u0000\u0014\u0001\u0017V\u00b4ppsr\u0000)com.sun.msv.da"
+"tatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util"
+"/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstrain"
+"tFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTyp"
+"et\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteType"
+"t\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cx"
+"q\u0000~\u0000\u001bq\u0000~\u0000?pq\u0000~\u00003\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.NmtokenType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001ft\u0000\u0007NMTOKENq\u0000~\u00003\u0000q\u0000~\u0000\u00c3t\u0000\u000benumerationsr\u0000\u0011java.util.Ha"
+"shSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002t\u0000\u0002not\u0000\u0003yesxq\u0000~\u0000%sq\u0000~\u0000&t\u0000\u000fNM"
+"TOKEN-derivedq\u0000~\u0000?sq\u0000~\u00005t\u0000\u0005focusq\u0000~\u0000?q\u0000~\u0000;sr\u0000\"com.sun.msv.gr"
+"ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"
+"ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"
+"pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006par"
+"entq\u0000~\u0000\u00cf[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u00009\u0000\u0000"
+"\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppp"
+"pq\u0000~\u0000Mpppppppppq\u0000~\u0000Tppppq\u0000~\u0000Lpppppppppppppq\u0000~\u0000Jppq\u0000~\u0000Rpppppp"
+"pq\u0000~\u0000Gq\u0000~\u0000_q\u0000~\u0000jq\u0000~\u0000sq\u0000~\u0000{q\u0000~\u0000xq\u0000~\u0000\u000eq\u0000~\u0000\u0089q\u0000~\u0000\u0091q\u0000~\u0000\u009fq\u0000~\u0000\u00a7q\u0000~\u0000"
+"\u00a4q\u0000~\u0000^q\u0000~\u0000Bq\u0000~\u0000iq\u0000~\u0000rq\u0000~\u0000zq\u0000~\u0000\nq\u0000~\u0000\u0088q\u0000~\u0000\u0090q\u0000~\u0000\u009eq\u0000~\u0000\u00a6pppppq\u0000~\u0000"
+"\u0005q\u0000~\u0000Apq\u0000~\u0000\u0086ppq\u0000~\u0000\u0085ppppppppppq\u0000~\u0000\u0084ppppppppppq\u0000~\u0000\rpq\u0000~\u0000\u00b7ppq\u0000~"
+"\u0000\u000bpppq\u0000~\u0000\u0007pppq\u0000~\u0000\bq\u0000~\u0000\u0095ppppppppppq\u0000~\u0000pppq\u0000~\u0000)q\u0000~\u0000oppppppq\u0000~\u0000"
+"\u009cq\u0000~\u0000\\pq\u0000~\u0000nq\u0000~\u0000[q\u0000~\u0000\fq\u0000~\u0000\u009bq\u0000~\u0000\u0013ppppppq\u0000~\u0000\tq\u0000~\u0000Zq\u0000~\u0000\u009appppq\u0000~"
+"\u0000\u0006ppppppq\u0000~\u0000\u007fppppppppppq\u0000~\u0000\u00abpppppppq\u0000~\u0000\u00b0ppq\u0000~\u0000\u008eppppq\u0000~\u0000U"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends GO.go_jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(GO.go_jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------------------");
        }

        protected Unmarshaller(GO.go_jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return GO.go_jaxb.impl.TermTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "about");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  21 :
                        if (("part_of" == ___local)&&("" == ___uri)) {
                            _PartOfOrIsA.add(((GO.go_jaxb.impl.PartOfImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.PartOfImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("is_a" == ___local)&&("" == ___uri)) {
                            _PartOfOrIsA.add(((GO.go_jaxb.impl.IsAImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.IsAImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("database_symbol" == ___local)&&("" == ___uri)) {
                            _Dbxref.add(((GO.go_jaxb.impl.DbxrefTypeImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.DbxrefTypeImpl.class), 24, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  22 :
                        if (("part_of" == ___local)&&("" == ___uri)) {
                            _PartOfOrIsA.add(((GO.go_jaxb.impl.PartOfImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.PartOfImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("is_a" == ___local)&&("" == ___uri)) {
                            _PartOfOrIsA.add(((GO.go_jaxb.impl.IsAImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.IsAImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("dbxref" == ___local)&&("" == ___uri)) {
                            _Dbxref.add(((GO.go_jaxb.impl.DbxrefImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.DbxrefImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("dbxref" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  31 :
                        if (("history" == ___local)&&("" == ___uri)) {
                            _History.add(((GO.go_jaxb.impl.HistoryImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.HistoryImpl.class), 31, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("history" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 29;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "n_associations");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  29 :
                        attIdx = context.getAttribute("", "obsolete");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("date" == ___local)&&("" == ___uri)) {
                            _History.add(((GO.go_jaxb.impl.HistoryTypeImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.HistoryTypeImpl.class), 30, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  15 :
                        if (("synonym" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  26 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _Association.add(((GO.go_jaxb.impl.AssociationTypeImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.AssociationTypeImpl.class), 27, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _Association.add(((GO.go_jaxb.impl.AssociationTypeImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.AssociationTypeImpl.class), 27, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("gene_product" == ___local)&&("" == ___uri)) {
                            _Association.add(((GO.go_jaxb.impl.AssociationTypeImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.AssociationTypeImpl.class), 27, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("gene_product" == ___local)&&("" == ___uri)) {
                            _Association.add(((GO.go_jaxb.impl.AssociationTypeImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.AssociationTypeImpl.class), 27, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  9 :
                        if (("accession" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("synonym" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        if (("definition" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  25 :
                        if (("dbxref" == ___local)&&("" == ___uri)) {
                            _Dbxref.add(((GO.go_jaxb.impl.DbxrefImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.DbxrefImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("dbxref" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        if (("association" == ___local)&&("" == ___uri)) {
                            _Association.add(((GO.go_jaxb.impl.AssociationImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.AssociationImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("association" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 26;
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "focus");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  28 :
                        if (("association" == ___local)&&("" == ___uri)) {
                            _Association.add(((GO.go_jaxb.impl.AssociationImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.AssociationImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("association" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 26;
                            return ;
                        }
                        if (("history" == ___local)&&("" == ___uri)) {
                            _History.add(((GO.go_jaxb.impl.HistoryImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.HistoryImpl.class), 31, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("history" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 29;
                            return ;
                        }
                        state = 31;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _About = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NAssociations = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Focus = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        if (("association" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 28;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "about");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  17 :
                        if (("synonym" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  31 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "n_associations");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  29 :
                        attIdx = context.getAttribute("", "obsolete");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  26 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  30 :
                        if (("history" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 31;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("dbxref" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 25;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  11 :
                        if (("accession" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  25 :
                        state = 28;
                        continue outer;
                    case  20 :
                        if (("definition" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "focus");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  28 :
                        state = 31;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("about" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  23 :
                        if (("parseType" == ___local)&&("" == ___uri)) {
                            _Dbxref.add(((GO.go_jaxb.impl.DbxrefTypeImpl) spawnChildFromEnterAttribute((GO.go_jaxb.impl.DbxrefTypeImpl.class), 24, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  31 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("n_associations" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  29 :
                        if (("obsolete" == ___local)&&("" == ___uri)) {
                            _History.add(((GO.go_jaxb.impl.HistoryTypeImpl) spawnChildFromEnterAttribute((GO.go_jaxb.impl.HistoryTypeImpl.class), 30, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  26 :
                        if (("parseType" == ___local)&&("" == ___uri)) {
                            _Association.add(((GO.go_jaxb.impl.AssociationTypeImpl) spawnChildFromEnterAttribute((GO.go_jaxb.impl.AssociationTypeImpl.class), 27, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  25 :
                        state = 28;
                        continue outer;
                    case  6 :
                        if (("focus" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  28 :
                        state = 31;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("focus" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "about");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  31 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "n_associations");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  5 :
                        if (("about" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  29 :
                        attIdx = context.getAttribute("", "obsolete");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  26 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("n_associations" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  25 :
                        state = 28;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "focus");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  28 :
                        state = 31;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  10 :
                            eatText4(value);
                            state = 11;
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "about");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  16 :
                            eatText5(value);
                            state = 17;
                            return ;
                        case  7 :
                            eatText3(value);
                            state = 8;
                            return ;
                        case  21 :
                            state = 22;
                            continue outer;
                        case  23 :
                            attIdx = context.getAttribute("", "parseType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  13 :
                            eatText6(value);
                            state = 14;
                            return ;
                        case  22 :
                            state = 25;
                            continue outer;
                        case  31 :
                            revertToParentFromText(value);
                            return ;
                        case  19 :
                            eatText7(value);
                            state = 20;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "n_associations");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  29 :
                            attIdx = context.getAttribute("", "obsolete");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  26 :
                            attIdx = context.getAttribute("", "parseType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  4 :
                            eatText1(value);
                            state = 5;
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  25 :
                            state = 28;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "focus");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  28 :
                            state = 31;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Accession = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Synonym.add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Definition = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
