//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.01.30 at 01:01:22 PST 
//


package GO.go_jaxb.impl;

public class AssociationTypeImpl implements GO.go_jaxb.AssociationType, com.sun.xml.bind.JAXBObject, GO.go_jaxb.impl.runtime.UnmarshallableObject, GO.go_jaxb.impl.runtime.XMLSerializable, GO.go_jaxb.impl.runtime.ValidatableObject
{

    protected GO.go_jaxb.GeneProductType _GeneProduct;
    protected com.sun.xml.bind.util.ListImpl _Evidence = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _ParseType;
    public final static java.lang.Class version = (GO.go_jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (GO.go_jaxb.AssociationType.class);
    }

    public GO.go_jaxb.GeneProductType getGeneProduct() {
        return _GeneProduct;
    }

    public void setGeneProduct(GO.go_jaxb.GeneProductType value) {
        _GeneProduct = value;
    }

    public java.util.List getEvidence() {
        return _Evidence;
    }

    public java.lang.String getParseType() {
        return _ParseType;
    }

    public void setParseType(java.lang.String value) {
        _ParseType = value;
    }

    public GO.go_jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(GO.go_jaxb.impl.runtime.UnmarshallingContext context) {
        return new GO.go_jaxb.impl.AssociationTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(GO.go_jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _Evidence.size();
        while (idx2 != len2) {
            if (_Evidence.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx2 ++)), "Evidence");
            } else {
                context.startElement("", "evidence");
                int idx_0 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx_0 ++)), "Evidence");
                context.endNamespaceDecls();
                int idx_1 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx_1 ++)), "Evidence");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx2 ++)), "Evidence");
                context.endElement();
            }
        }
        if (_GeneProduct instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _GeneProduct), "GeneProduct");
        } else {
            context.startElement("", "gene_product");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GeneProduct), "GeneProduct");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GeneProduct), "GeneProduct");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _GeneProduct), "GeneProduct");
            context.endElement();
        }
    }

    public void serializeAttributes(GO.go_jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _Evidence.size();
        if (_ParseType!= null) {
            context.startAttribute("", "parseType");
            try {
                context.text(((java.lang.String) _ParseType), "ParseType");
            } catch (java.lang.Exception e) {
                GO.go_jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx2 != len2) {
            if (_Evidence.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx2 ++)), "Evidence");
            } else {
                idx2 += 1;
            }
        }
        if (_GeneProduct instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GeneProduct), "GeneProduct");
        }
    }

    public void serializeURIs(GO.go_jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _Evidence.size();
        while (idx2 != len2) {
            if (_Evidence.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx2 ++)), "Evidence");
            } else {
                idx2 += 1;
            }
        }
        if (_GeneProduct instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GeneProduct), "GeneProduct");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (GO.go_jaxb.AssociationType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\t\u00b22Appsq\u0000~\u0000\u0000\u0006\u00db\u0086\u008appsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00cd\u00cfkppsr\u0000 com.sun"
+".msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar."
+"UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00cd\u00cf`sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0007\u0003\u00cd\u00cf]q\u0000~\u0000\rpsr\u0000\'com.sun.msv.gram"
+"mar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/ms"
+"v/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003"
+"\u0000\u00cb\u00f9\u00dfq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000\t\u0000\u00cb\u00f9\u00c9q\u0000~\u0000\rpsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003"
+"\u0000\u00cb\u00f9\u00c6q\u0000~\u0000\rpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\f\u0001psr\u0000 com.sun.msv.grammar.Any"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019psr\u0000#com.sun.msv.grammar.SimpleNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespace"
+"URIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000\u0013GO.go_jaxb.Evidencet\u0000+http://java.sun.com/j"
+"axb/xjc/dummy-elementssq\u0000~\u0000\u000f\u0003\u0001\u00d5|q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0000\u0003\u0001\u00d5qppsq\u0000~\u0000\u000f\u0000\u00cb\u00f9"
+"\u00dfpp\u0000sq\u0000~\u0000\u0007\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000\t\u0000\u00cb\u00f9\u00c9q\u0000~\u0000\rpsq\u0000~\u0000\u0015\u0000\u00cb\u00f9\u00c6q\u0000~\u0000\rpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0017GO.go_jaxb.EvidenceTypeq\u0000~\u0000#sq\u0000~\u0000\u0007\u00025\u00db\u008dppsq\u0000~\u0000\u0015\u00025"
+"\u00db\u0082q\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLo"
+"rg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/su"
+"n/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000nCuppsr\u0000\"com.sun.msv.datatype.x"
+"sd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinA"
+"tomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lc"
+"om/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www."
+"w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramma"
+"r.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom"
+".sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnames"
+"paceURIq\u0000~\u0000 xpq\u0000~\u00009q\u0000~\u00008sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.org/20"
+"01/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\bevidencet\u0000\u0000q\u0000~\u0000\u001esq\u0000~\u0000\u0007\u0003\r\u00b7"
+"\u001appsq\u0000~\u0000\u000f\u0000\u00cb\u00f9\u00dfpp\u0000sq\u0000~\u0000\u0007\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000\t\u0000\u00cb\u00f9\u00c9q\u0000~\u0000\rpsq\u0000~\u0000\u0015\u0000\u00cb\u00f9\u00c6q\u0000~\u0000\rp"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0016GO.go_jaxb.GeneProductq\u0000~\u0000#sq\u0000~\u0000\u000f\u0002A\u00bd"
+"9pp\u0000sq\u0000~\u0000\u0000\u0002A\u00bd.ppsq\u0000~\u0000\u000f\u0000\u00cb\u00f9\u00dfpp\u0000sq\u0000~\u0000\u0007\u0000\u00cb\u00f9\u00d4ppsq\u0000~\u0000\t\u0000\u00cb\u00f9\u00c9q\u0000~\u0000\rpsq\u0000"
+"~\u0000\u0015\u0000\u00cb\u00f9\u00c6q\u0000~\u0000\rpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u001aGO.go_jaxb.GeneProductT"
+"ypeq\u0000~\u0000#sq\u0000~\u0000\u0007\u0001u\u00c3Jppsq\u0000~\u0000\u0015\u0001u\u00c3?q\u0000~\u0000\rpq\u0000~\u00001sq\u0000~\u0000\u001fq\u0000~\u0000Bq\u0000~\u0000Cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u0000\fgene_productq\u0000~\u0000Fsq\u0000~\u0000\u0007\u0002\u00d6\u00ab\u00b2ppsq\u0000~\u0000\u0015\u0002\u00d6\u00ab\u00a7q\u0000~\u0000\rpsr\u0000\u001c"
+"com.sun.msv.grammar.ValueExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtq\u0000~\u0000/L\u0000\u0004nameq\u0000~\u0000"
+"0L\u0000\u0005valuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000\u0003\u0000\u00e1\u00ee\u00afppsr\u0000#com.sun.msv.da"
+"tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00003q\u0000~\u00008t"
+"\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000;\u0001sq\u0000~\u0000?q\u0000~\u0000bq\u0000~\u00008t\u0000\bResourcesq\u0000~\u0000\u001ft\u0000\tp"
+"arseTypeq\u0000~\u0000Fq\u0000~\u0000\u001esr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clo"
+"sedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7"
+"j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000j[\u0000\u0005tablet\u0000![Lcom"
+"/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0013\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.gra"
+"mmar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppq\u0000~\u0000Oppppppppppq\u0000~\u0000"
+"\u000eppq\u0000~\u0000\u000bppppppppppq\u0000~\u0000\bpppppppppppq\u0000~\u0000\u0014q\u0000~\u0000(q\u0000~\u0000Jq\u0000~\u0000Rq\u0000~\u0000\u0005p"
+"pppppq\u0000~\u0000\u0013q\u0000~\u0000\'q\u0000~\u0000,q\u0000~\u0000Iq\u0000~\u0000Qpppppppppppppppppppppppppppq\u0000~"
+"\u0000Gppppppppppppppppq\u0000~\u0000[ppppppppppppppppppppq\u0000~\u0000\u0006q\u0000~\u0000Vppq\u0000~\u0000%"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends GO.go_jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(GO.go_jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "----------");
        }

        protected Unmarshaller(GO.go_jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return GO.go_jaxb.impl.AssociationTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _GeneProduct = ((GO.go_jaxb.impl.GeneProductTypeImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.GeneProductTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _Evidence.add(((GO.go_jaxb.impl.EvidenceImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.EvidenceImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("gene_product" == ___local)&&("" == ___uri)) {
                            _GeneProduct = ((GO.go_jaxb.impl.GeneProductImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.GeneProductImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("gene_product" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _Evidence.add(((GO.go_jaxb.impl.EvidenceImpl) spawnChildFromEnterElement((GO.go_jaxb.impl.EvidenceImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "evidence_code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ParseType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  5 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "evidence_code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        if (("gene_product" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("parseType" == ___local)&&("" == ___uri)) {
                            _GeneProduct = ((GO.go_jaxb.impl.GeneProductTypeImpl) spawnChildFromEnterAttribute((GO.go_jaxb.impl.GeneProductTypeImpl.class), 8, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("parseType" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        if (("evidence_code" == ___local)&&("" == ___uri)) {
                            _Evidence.add(((GO.go_jaxb.impl.EvidenceTypeImpl) spawnChildFromEnterAttribute((GO.go_jaxb.impl.EvidenceTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "parseType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "evidence_code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("parseType" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            attIdx = context.getAttribute("", "parseType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "parseType");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  9 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "evidence_code");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
