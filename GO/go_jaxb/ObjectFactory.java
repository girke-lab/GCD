//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.01.30 at 01:01:22 PST 
//


package GO.go_jaxb;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the GO.go_jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends GO.go_jaxb.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap();
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static GO.go_jaxb.impl.runtime.GrammarInfo grammarInfo = new GO.go_jaxb.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (GO.go_jaxb.ObjectFactory.class));
    public final static java.lang.Class version = (GO.go_jaxb.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((GO.go_jaxb.IsAType.class), "GO.go_jaxb.impl.IsATypeImpl");
        defaultImplementations.put((GO.go_jaxb.AssociationType.class), "GO.go_jaxb.impl.AssociationTypeImpl");
        defaultImplementations.put((GO.go_jaxb.HistoryType.class), "GO.go_jaxb.impl.HistoryTypeImpl");
        defaultImplementations.put((GO.go_jaxb.Reference.class), "GO.go_jaxb.impl.ReferenceImpl");
        defaultImplementations.put((GO.go_jaxb.TermType.class), "GO.go_jaxb.impl.TermTypeImpl");
        defaultImplementations.put((GO.go_jaxb.Deleted.class), "GO.go_jaxb.impl.DeletedImpl");
        defaultImplementations.put((GO.go_jaxb.Definition.class), "GO.go_jaxb.impl.DefinitionImpl");
        defaultImplementations.put((GO.go_jaxb.CreatedType.class), "GO.go_jaxb.impl.CreatedTypeImpl");
        defaultImplementations.put((GO.go_jaxb.PartOfType.class), "GO.go_jaxb.impl.PartOfTypeImpl");
        defaultImplementations.put((GO.go_jaxb.ReferenceType.class), "GO.go_jaxb.impl.ReferenceTypeImpl");
        defaultImplementations.put((GO.go_jaxb.SplitType.class), "GO.go_jaxb.impl.SplitTypeImpl");
        defaultImplementations.put((GO.go_jaxb.MovedType.class), "GO.go_jaxb.impl.MovedTypeImpl");
        defaultImplementations.put((GO.go_jaxb.Created.class), "GO.go_jaxb.impl.CreatedImpl");
        defaultImplementations.put((GO.go_jaxb.Accession.class), "GO.go_jaxb.impl.AccessionImpl");
        defaultImplementations.put((GO.go_jaxb.DatabaseSymbol.class), "GO.go_jaxb.impl.DatabaseSymbolImpl");
        defaultImplementations.put((GO.go_jaxb.Synonym.class), "GO.go_jaxb.impl.SynonymImpl");
        defaultImplementations.put((GO.go_jaxb.Version.class), "GO.go_jaxb.impl.VersionImpl");
        defaultImplementations.put((GO.go_jaxb.RDFType.class), "GO.go_jaxb.impl.RDFTypeImpl");
        defaultImplementations.put((GO.go_jaxb.GoType.class), "GO.go_jaxb.impl.GoTypeImpl");
        defaultImplementations.put((GO.go_jaxb.Association.class), "GO.go_jaxb.impl.AssociationImpl");
        defaultImplementations.put((GO.go_jaxb.VersionType.class), "GO.go_jaxb.impl.VersionTypeImpl");
        defaultImplementations.put((GO.go_jaxb.Term.class), "GO.go_jaxb.impl.TermImpl");
        defaultImplementations.put((GO.go_jaxb.DbxrefType.class), "GO.go_jaxb.impl.DbxrefTypeImpl");
        defaultImplementations.put((GO.go_jaxb.Name.class), "GO.go_jaxb.impl.NameImpl");
        defaultImplementations.put((GO.go_jaxb.GeneProductType.class), "GO.go_jaxb.impl.GeneProductTypeImpl");
        defaultImplementations.put((GO.go_jaxb.Moved.class), "GO.go_jaxb.impl.MovedImpl");
        defaultImplementations.put((GO.go_jaxb.Merged.class), "GO.go_jaxb.impl.MergedImpl");
        defaultImplementations.put((GO.go_jaxb.Go.class), "GO.go_jaxb.impl.GoImpl");
        defaultImplementations.put((GO.go_jaxb.RDF.class), "GO.go_jaxb.impl.RDFImpl");
        defaultImplementations.put((GO.go_jaxb.Evidence.class), "GO.go_jaxb.impl.EvidenceImpl");
        defaultImplementations.put((GO.go_jaxb.Date.class), "GO.go_jaxb.impl.DateImpl");
        defaultImplementations.put((GO.go_jaxb.Dbxref.class), "GO.go_jaxb.impl.DbxrefImpl");
        defaultImplementations.put((GO.go_jaxb.IsA.class), "GO.go_jaxb.impl.IsAImpl");
        defaultImplementations.put((GO.go_jaxb.GeneProduct.class), "GO.go_jaxb.impl.GeneProductImpl");
        defaultImplementations.put((GO.go_jaxb.Rationale.class), "GO.go_jaxb.impl.RationaleImpl");
        defaultImplementations.put((GO.go_jaxb.DeletedType.class), "GO.go_jaxb.impl.DeletedTypeImpl");
        defaultImplementations.put((GO.go_jaxb.EvidenceType.class), "GO.go_jaxb.impl.EvidenceTypeImpl");
        defaultImplementations.put((GO.go_jaxb.Person.class), "GO.go_jaxb.impl.PersonImpl");
        defaultImplementations.put((GO.go_jaxb.MergedType.class), "GO.go_jaxb.impl.MergedTypeImpl");
        defaultImplementations.put((GO.go_jaxb.PartOf.class), "GO.go_jaxb.impl.PartOfImpl");
        defaultImplementations.put((GO.go_jaxb.History.class), "GO.go_jaxb.impl.HistoryImpl");
        defaultImplementations.put((GO.go_jaxb.Split.class), "GO.go_jaxb.impl.SplitImpl");
        rootTagMap.put(new javax.xml.namespace.QName("", "created"), (GO.go_jaxb.Created.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "person"), (GO.go_jaxb.Person.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "association"), (GO.go_jaxb.Association.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "date"), (GO.go_jaxb.Date.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "rationale"), (GO.go_jaxb.Rationale.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "merged"), (GO.go_jaxb.Merged.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "term"), (GO.go_jaxb.Term.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "RDF"), (GO.go_jaxb.RDF.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "name"), (GO.go_jaxb.Name.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "deleted"), (GO.go_jaxb.Deleted.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "gene_product"), (GO.go_jaxb.GeneProduct.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "part_of"), (GO.go_jaxb.PartOf.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "moved"), (GO.go_jaxb.Moved.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "database_symbol"), (GO.go_jaxb.DatabaseSymbol.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "definition"), (GO.go_jaxb.Definition.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "evidence"), (GO.go_jaxb.Evidence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "split"), (GO.go_jaxb.Split.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "go"), (GO.go_jaxb.Go.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "version"), (GO.go_jaxb.Version.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "accession"), (GO.go_jaxb.Accession.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "synonym"), (GO.go_jaxb.Synonym.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "dbxref"), (GO.go_jaxb.Dbxref.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "history"), (GO.go_jaxb.History.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "is_a"), (GO.go_jaxb.IsA.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "reference"), (GO.go_jaxb.Reference.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: GO.go_jaxb
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of IsAType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.IsAType createIsAType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.IsATypeImpl();
    }

    /**
     * Create an instance of AssociationType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.AssociationType createAssociationType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.AssociationTypeImpl();
    }

    /**
     * Create an instance of HistoryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.HistoryType createHistoryType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.HistoryTypeImpl();
    }

    /**
     * Create an instance of Reference
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Reference createReference()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.ReferenceImpl();
    }

    /**
     * Create an instance of TermType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.TermType createTermType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.TermTypeImpl();
    }

    /**
     * Create an instance of Deleted
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Deleted createDeleted()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DeletedImpl();
    }

    /**
     * Create an instance of Definition
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Definition createDefinition()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DefinitionImpl();
    }

    /**
     * Create an instance of Definition
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Definition createDefinition(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DefinitionImpl(value);
    }

    /**
     * Create an instance of CreatedType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.CreatedType createCreatedType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.CreatedTypeImpl();
    }

    /**
     * Create an instance of PartOfType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.PartOfType createPartOfType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.PartOfTypeImpl();
    }

    /**
     * Create an instance of ReferenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.ReferenceType createReferenceType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.ReferenceTypeImpl();
    }

    /**
     * Create an instance of SplitType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.SplitType createSplitType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.SplitTypeImpl();
    }

    /**
     * Create an instance of MovedType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.MovedType createMovedType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.MovedTypeImpl();
    }

    /**
     * Create an instance of Created
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Created createCreated()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.CreatedImpl();
    }

    /**
     * Create an instance of Accession
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Accession createAccession()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.AccessionImpl();
    }

    /**
     * Create an instance of Accession
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Accession createAccession(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.AccessionImpl(value);
    }

    /**
     * Create an instance of DatabaseSymbol
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.DatabaseSymbol createDatabaseSymbol()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DatabaseSymbolImpl();
    }

    /**
     * Create an instance of DatabaseSymbol
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.DatabaseSymbol createDatabaseSymbol(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DatabaseSymbolImpl(value);
    }

    /**
     * Create an instance of Synonym
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Synonym createSynonym()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.SynonymImpl();
    }

    /**
     * Create an instance of Synonym
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Synonym createSynonym(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.SynonymImpl(value);
    }

    /**
     * Create an instance of Version
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Version createVersion()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.VersionImpl();
    }

    /**
     * Create an instance of RDFType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.RDFType createRDFType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.RDFTypeImpl();
    }

    /**
     * Create an instance of GoType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.GoType createGoType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.GoTypeImpl();
    }

    /**
     * Create an instance of Association
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Association createAssociation()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.AssociationImpl();
    }

    /**
     * Create an instance of VersionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.VersionType createVersionType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.VersionTypeImpl();
    }

    /**
     * Create an instance of Term
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Term createTerm()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.TermImpl();
    }

    /**
     * Create an instance of DbxrefType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.DbxrefType createDbxrefType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DbxrefTypeImpl();
    }

    /**
     * Create an instance of Name
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Name createName()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.NameImpl();
    }

    /**
     * Create an instance of Name
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Name createName(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.NameImpl(value);
    }

    /**
     * Create an instance of GeneProductType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.GeneProductType createGeneProductType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.GeneProductTypeImpl();
    }

    /**
     * Create an instance of Moved
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Moved createMoved()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.MovedImpl();
    }

    /**
     * Create an instance of Merged
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Merged createMerged()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.MergedImpl();
    }

    /**
     * Create an instance of Go
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Go createGo()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.GoImpl();
    }

    /**
     * Create an instance of RDF
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.RDF createRDF()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.RDFImpl();
    }

    /**
     * Create an instance of Evidence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Evidence createEvidence()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.EvidenceImpl();
    }

    /**
     * Create an instance of Date
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Date createDate()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DateImpl();
    }

    /**
     * Create an instance of Date
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Date createDate(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DateImpl(value);
    }

    /**
     * Create an instance of Dbxref
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Dbxref createDbxref()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DbxrefImpl();
    }

    /**
     * Create an instance of IsA
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.IsA createIsA()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.IsAImpl();
    }

    /**
     * Create an instance of GeneProduct
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.GeneProduct createGeneProduct()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.GeneProductImpl();
    }

    /**
     * Create an instance of Rationale
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Rationale createRationale()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.RationaleImpl();
    }

    /**
     * Create an instance of Rationale
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Rationale createRationale(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.RationaleImpl(value);
    }

    /**
     * Create an instance of DeletedType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.DeletedType createDeletedType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.DeletedTypeImpl();
    }

    /**
     * Create an instance of EvidenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.EvidenceType createEvidenceType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.EvidenceTypeImpl();
    }

    /**
     * Create an instance of Person
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Person createPerson()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.PersonImpl();
    }

    /**
     * Create an instance of Person
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Person createPerson(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.PersonImpl(value);
    }

    /**
     * Create an instance of MergedType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.MergedType createMergedType()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.MergedTypeImpl();
    }

    /**
     * Create an instance of PartOf
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.PartOf createPartOf()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.PartOfImpl();
    }

    /**
     * Create an instance of History
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.History createHistory()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.HistoryImpl();
    }

    /**
     * Create an instance of Split
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public GO.go_jaxb.Split createSplit()
        throws javax.xml.bind.JAXBException
    {
        return new GO.go_jaxb.impl.SplitImpl();
    }

}
